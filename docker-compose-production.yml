version: "3.9"
services:
    cron:
        image: crazymax/swarm-cronjob:latest
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            LOG_LEVEL: info
        deploy:
            placement:
                constraints: [node.role == manager]

    traefik:
        image: traefik:2.9
        command:
            --providers.docker=true
            --providers.docker.watch=true
            --providers.docker.swarmMode=true
            --providers.docker.exposedByDefault=false
            --entryPoints.http.address=:80
            --entryPoints.https.address=:443
            --certificatesresolvers.letsEncrypt.acme.httpChallenge=true
            --certificatesresolvers.letsEncrypt.acme.httpChallenge.entryPoint=http
            --certificatesresolvers.letsEncrypt.acme.email=hermansochi@ya.ru
            --certificatesresolvers.letsEncrypt.acme.storage=/certs/acme.json
        ports:
            - target: 80
              published: 80
              protocol: tcp
              mode: host
            - target: 443
              published: 443
              protocol: tcp
              mode: host
        networks:
            - traefik-public
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - traefik-public-certs:/certs
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public

                - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
                - traefik.http.routers.http-catchall.entryPoints=http
                - traefik.http.routers.http-catchall.middlewares=redirect-to-https
                - traefik.http.services.http-catchall.loadBalancer.server.port=80

                - traefik.http.middlewares.redirect-to-https.redirectScheme.scheme=https
                - traefik.http.middlewares.redirect-to-https.redirectScheme.permanent=true

                - traefik.http.middlewares.secure-headers.headers.sslRedirect=true
                - traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000
                - traefik.http.middlewares.secure-headers.headers.contentSecurityPolicy=block-all-mixed-content
            placement:
                constraints: [ node.role == manager ]

    frontend:
        image: ${REGISTRY}/frontend:${IMAGE_TAG}
        networks:
            - traefik-public
            - default
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.routers.frontend.rule=Host(`herman.team`) || Host(`www.herman.team`)
                - traefik.http.services.frontend.loadBalancer.server.port=80
                - traefik.http.middlewares.frontend-redirect.redirectRegex.regex=^(https?://)www.herman.team/(.*)$$
                - traefik.http.middlewares.frontend-redirect.redirectRegex.replacement=$${1}herman.team/$${2}
                - traefik.http.middlewares.frontend-redirect.redirectRegex.permanent=true
                - traefik.http.routers.frontend.middlewares=frontend-redirect,secure-headers
                - traefik.http.routers.frontend.entryPoints=https
                - traefik.http.routers.frontend.tls=true
                - traefik.http.routers.frontend.tls.certResolver=letsEncrypt
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s

    react:
        image: ${REGISTRY}/pet-react:${IMAGE_TAG}
        environment:
            NODE_ENV: production
            REACT_APP_API_URL: https://api.herman.team/api
            REACT_APP_API_VER: v1
            REACT_APP_AUTH_URL: https://api.herman.team
            REACT_APP_AVATARS: https://storage.herman.team/pet/avatars/
        networks:
            - traefik-public
            - default
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.routers.react.rule=Host(`react.herman.team`)
                - traefik.http.services.react.loadBalancer.server.port=80
                - traefik.http.middlewares.react-redirect.redirectRegex.regex=^(https?://)www.react.herman.team/(.*)$$
                - traefik.http.middlewares.react-redirect.redirectRegex.replacement=$${1}react.herman.team/$${2}
                - traefik.http.middlewares.react-redirect.redirectRegex.permanent=true
                - traefik.http.routers.react.middlewares=react-redirect,secure-headers
                - traefik.http.routers.react.entrypoints=https
                - traefik.http.routers.react.tls=true
                - traefik.http.routers.react.tls.certResolver=letsEncrypt
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s

    underdante:
        image: ${REGISTRY}/pet-underdante:${IMAGE_TAG}
        environment:
            NODE_ENV: production
            REACT_APP_API_URL: https://api.herman.team/api
            REACT_APP_API_VER: v1
            REACT_APP_AUTH_URL: https://api.herman.team
            REACT_APP_AVATARS: https://storage.herman.team/pet/avatars/
        networks:
            - traefik-public
            - default
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.routers.underdante.rule=Host(`underdante.herman.team`)
                - traefik.http.services.underdante.loadBalancer.server.port=80
                - traefik.http.middlewares.underdante-redirect.redirectRegex.regex=^(https?://)www.underdante.herman.team/(.*)$$
                - traefik.http.middlewares.underdante-redirect.redirectRegex.replacement=$${1}underdante.herman.team/$${2}
                - traefik.http.middlewares.underdante-redirect.redirectRegex.permanent=true
                - traefik.http.routers.underdante.middlewares=underdante-redirect,secure-headers
                - traefik.http.routers.underdante.entrypoints=https
                - traefik.http.routers.underdante.tls=true
                - traefik.http.routers.underdante.tls.certResolver=letsEncrypt
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s

    vue:
        image: ${REGISTRY}/pet-vue:${IMAGE_TAG}
        environment:
            NODE_ENV: production
            REACT_APP_API_URL: https://api.herman.team/api
            REACT_APP_API_VER: v1
            REACT_APP_AUTH_URL: https://api.herman.team
            REACT_APP_AVATARS: https://storage.herman.team/pet/avatars/
        networks:
            - traefik-public
            - default
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.routers.vue.rule=Host(`vue.herman.team`)
                - traefik.http.services.vue.loadBalancer.server.port=80
                - traefik.http.middlewares.vue-redirect.redirectRegex.regex=^(https?://)www.vue.herman.team/(.*)$$
                - traefik.http.middlewares.vue-redirect.redirectRegex.replacement=$${1}vue.herman.team/$${2}
                - traefik.http.middlewares.vue-redirect.redirectRegex.permanent=true
                - traefik.http.routers.vue.middlewares=vue-redirect,secure-headers
                - traefik.http.routers.vue.entrypoints=https
                - traefik.http.routers.vue.tls=true
                - traefik.http.routers.vue.tls.certResolver=letsEncrypt
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s

    api:
        image: ${REGISTRY}/pet-api:${IMAGE_TAG}
        networks:
            - traefik-public
            - default
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.routers.api.rule=Host(`api.herman.team`)
                - traefik.http.services.api.loadBalancer.server.port=80
                - traefik.http.routers.api.middlewares=secure-headers
                - traefik.http.routers.api.entryPoints=https
                - traefik.http.routers.api.tls=true
                - traefik.http.routers.api.tls.certResolver=letsEncrypt
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 5s
            placement:
                constraints: [node.role == manager]

    api-php-fpm:
        image: ${REGISTRY}/api-php-fpm:${IMAGE_TAG}
        deploy:
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 5s

    appinit:
        image: ${REGISTRY}/api-php-cli:${IMAGE_TAG}
        command: sh -c 'wait-for-it api-postgres:5432 -t 60 && php artisan migrate:fresh && php artisan db:seed && php artisan avatar:add && php artisan route:cache && php artisan config:cache'
        deploy:
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 5
                window: 120s

    api-postgres:
        image: postgres:13.3-alpine
        environment:
            POSTGRES_USER: app
            POSTGRES_PASSWORD_FILE: /run/secrets/api_db_password
            POSTGRES_DB: app
        secrets:
            - api_db_password
        volumes:
            - api-postgres:/var/lib/postgresql/data
        deploy:
            placement:
                constraints: [node.role == manager]
            endpoint_mode: dnsrr

    minio:
        image: minio/minio:RELEASE.2022-10-21T22-37-48Z
        command: server --console-address ":9001" /data
        environment:
            MINIO_ROOT_USER: local
            MINIO_ROOT_PASSWORD: secret123456
            MINIO_BROWSER_REDIRECT_URL: https://console.storage.herman.team
        volumes:
            - minio-storage:/data
        networks:
            - traefik-public
            - default
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                # Console
                - traefik.http.routers.storage-console.rule=Host(`console.storage.herman.team`)
                - traefik.http.routers.storage-console.entrypoints=https
                - traefik.http.routers.storage-console.service=storage-console
                - traefik.http.services.storage-console.loadbalancer.server.port=9001
                - traefik.http.routers.storage-console.tls=true
                - traefik.http.routers.storage-console.tls.certResolver=letsEncrypt
                # APi
                - traefik.http.routers.storage.rule=Host(`storage.herman.team`)
                - traefik.http.routers.storage.entrypoints=https
                - traefik.http.routers.storage.service=storage
                - traefik.http.services.storage.loadbalancer.server.port=9000
                - traefik.http.routers.storage.tls=true
                - traefik.http.routers.storage.tls.certResolver=letsEncrypt
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 5s
            placement:
                constraints: [node.role == manager]
        healthcheck:
            test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

    mc-service:
        image: minio/mc
        entrypoint: /bin/sh -c "/usr/bin/mc alias set myminio http://minio:9000 local secret123456 && /usr/bin/mc mb myminio/pet && /usr/bin/mc anonymous set download myminio/pet"
        networks:
            - traefik-public
            - default

    password:
        image: ${REGISTRY}/password-react:1
        environment:
            NODE_ENV: production
        networks:
            - traefik-public
            - default
        deploy:
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.http.routers.password.rule=Host(`pwd.herman.team`)
                - traefik.http.services.password.loadBalancer.server.port=80
                - traefik.http.middlewares.password-redirect.redirectRegex.regex=^(https?://)www.pwd.herman.team/(.*)$$
                - traefik.http.middlewares.password-redirect.redirectRegex.replacement=$${1}pwd.herman.team/$${2}
                - traefik.http.middlewares.password-redirect.redirectRegex.permanent=true
                - traefik.http.routers.password.middlewares=password-redirect,secure-headers
                - traefik.http.routers.password.entrypoints=https
                - traefik.http.routers.password.tls=true
                - traefik.http.routers.password.tls.certResolver=letsEncrypt
            mode: replicated
            replicas: 1
            update_config:
                parallelism: 1
                delay: 10s

secrets:
    api_db_password:
        file: ./secrets/api_db_password

volumes:
    api-postgres:
    traefik-public-certs:
    minio-storage:

networks:
    traefik-public:
        name: traefik-public